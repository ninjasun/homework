Homework 7 posting

Since Wednesday is already part of the Thanksgiving holiday this year, and 
there is no class, we would like to ask you to please submit the solutions 
as a Sakai Assignment.  (login to sakai, look for 205-11 tab, click on 
Assignments on the lhs, then on Homewrok 7.)  This will still allow you to 
ask me questions about the assignment in class on Monday, and will prevent 
assignments from piling up (on Monday the next assignment, or relations is 
coming out).

  In order to prevent printing problems for us, *all solutions should be 
  typed in plain (ASCii) text*.  (This means no scanning in of handwirtten 
  solutions, and if you use MSWord, please SAVE-AS text.)

To make the submission easier (and familiarize you with the form of the 
questions on the final exam), I have rephrased the problem statement 
slightly to make all answers more uniform:

Charles Babbage, the 19th century inventor of the mechanical computer, 
observed the following relationship between the squares of integers:
         - enumerate the squares: 0, 1, 4, 9, 16, 25,... 
         - look at the 'first differences': 1, 3, 5, 7, 9, ... 
         - look at the 'second differences': 2, 2, 2, 2, 2, ... 

It seems that if you go far enough with differences, you get a constant, 2 
in this case.  Based on this, below is an algorithm SQ for computing the 
square of an arbitrary number n, using only addition.  Prove that 


  (n>=0)  {SQ} (y=n*n)
  
by providing in the space below the missing assertions in the outline:

  /* assertion PRE:  n>=0 */
  /* assertion A: (implied by PRE as a result of simple algebra */
      second := 2;
      first := 1;
      y := 0;
      k := 0;
   /* assertion B holds here */
      while (k!=n) do
        /* assertion C holds here */
        /* assertion C', which is implied by C, holds here */
              y := y  + first;
        /* assertion D holds here */
             first := first + second;
        /* assertion E holds here */
             k := k+1;
        /* assertion F holds here */
         end
   /* assertion G holds here; show how it implies next line */
   /* assertion POST: y=n*n */

 (1) Which of the assertion(s) named (A thru G) are the "loop invariant".
 (2) Discover the loop invariant that will ensure that G implies POST
 (3) List the actual assertions besides each of the names below:
 
 Assertion     Formula
   PRE              n>=0
   A

   B

   C

   C'

   D

   E

   F

   G

   POST           y=n*n
   

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Alternative, simpler program verification, FOR PARTIAL CREDIT. (The loop 
invariant is much easier to discover and state). PLEASE MARK CLEARLY WHICH 
YOU WOULD LIKE US TO GRADE.


/* PRE: n > 0
/* assertion A: (implied by PRE through simple algebra)
      i:=1; 
      j:=1;
/* assertion INV
    while i < n  do  
      /* assertion B  
	  /* assertion B', which is implied by B (show algebra)
	     i:=i+1; 
	  /* assertion C
	     j:=j+2*i-1;
	  /* assertion D
    end
/* assertion E holds here, which implies POST (show how) */
/* assertion POST: y=n*n */


Give the assertions  corresponding to each of INV, A,B,C,D,E,F:

Assertion     Formula
   PRE          n>=0
   
   INV
   
   A

   B

   C

   C'

   D

   E
   
   POST         y=n*n
